on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: stable or canary?
        required: true
        type: choice
        options:
          - canary
          - stable

      semverType:
        description: semver type?
        type: choice
        options:
          - patch
          - minor
          - major

name: release-and-publish

env:
  NODE_LTS_VERSION: 20

jobs:
  release:
    if: github.repository_owner == 'rrrrrrrrrrrocky'
    runs-on: ubuntu-latest

    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true

      - name: Clone repository
        run: git clone https://${{ github.token }}@github.com/rrrrrrrrrrrocky/library-js.git --depth=25 --single-branch --branch main .

      - name: Get commit of the latest tag
        run: echo "LATEST_TAG_COMMIT=$(git rev-list -n 1 $(git describe --tags --abbrev=0))" >> $GITHUB_ENV

      - name: Get latest commit
        run: echo "LATEST_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Check if new commits since last tag
        if: ${{ github.event.inputs.releaseType != 'stable' }}
        run: |
          if [ "$LATEST_TAG_COMMIT" = "$LATEST_COMMIT" ]; then
            echo "No new commits. Exiting..."
            exit 1
          fi

      - name: Install pnpm
        run: npm install -g pnpm
        # corepack 사용시 불필요한 수정사항 생김
        # - run: corepack enable && pnpm --version

      - id: get-store-path
        run: echo STORE_PATH=$(pnpm store path) >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        timeout-minutes: 5
        id: cache-pnpm-store
        with:
          path: ${{ steps.get-store-path.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-
            pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm i --frozen-lockfile

      - run: node ./scripts/start-release.js --release-type ${{ github.event.inputs.releaseType || 'canary' }} --semver-type ${{ github.event.inputs.semverType }}
        env:
          NPM_TOKEN: ${{ secrets.RRRRRRRRRRROCKY_NPM_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}

  publish:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true

      - name: sync commit
        run: git pull origin main

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Configure NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.RRRRRRRRRRROCKY_NPM_TOKEN }}" > ~/.npmrc

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Publish packages
        run: pnpm lerna publish from-package --yes --loglevel verbose
